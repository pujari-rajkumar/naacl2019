
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "ARGDOUBLE ARGID ARGINT ARGSTRING ARGSTRINGID ARGUMENTS COMMENT CONDS DBCLASS DBFUNC DBMODULE EMBEDDING ENTITY EQ FECLASS FEFUNC FEMODULE FILE FLOAT GEQ GROUPARG GROUPBY HARDCONSTRAINT HEAD ID IMPL INPUT LABEL LAMBDA LBBINARY LBCLASSES LBMULTICLASS LBMULTILABEL LBTYPE LEQ LOAD NETWORK NUMBER PREDICATE RULE RULESET SCCLASS SCMODULE SCORE SPLITCLASSIF SUMFORALL TARGET VARARG VARINSTANCE VARPRED VARSTRING VECTORmodel : instructionlist\n        instructionlist : instructionlist instruction ';'\n                        | instruction ';'\n        instruction : ENTITY ':' VARSTRING ',' ARGUMENTS ':' '[' argumentdeflist ']'instruction : PREDICATE ':' VARSTRING ',' ARGUMENTS ':' '[' VARPRED ',' VARPRED ']'\n        argumentdeflist : argumentdeflist ',' argumentdef\n                        | argumentdef\n        argumentdef : VARSTRING ':' ':' typetype : ARGSTRINGtype : ARGSTRINGIDtype : ARGINTtype : ARGDOUBLEtype : ARGIDinstruction : LABEL ':' VARSTRING ',' LBCLASSES ':' NUMBER ',' LBTYPE ':' labeltypelabeltype : LBMULTILABELlabeltype : LBMULTICLASSlabeltype : LBBINARYinstruction : LOAD ':' VARSTRING ',' FILE ':' VARSTRINGinstruction : RULESET '{' rulelist '}' GROUPBY ':' GROUPARGinstruction : DBMODULE ':' VARSTRINGinstruction : DBCLASS ':' VARSTRINGinstruction : FEMODULE ':' VARSTRINGinstruction : FECLASS ':' VARSTRINGinstruction : SCMODULE ':' VARSTRING\n        rulelist : rulelist rule ';'\n                 | rule ';'\n        \n        rule : RULE ':' proposition filters lambda scoring featureconf dbconf splitconf target\n        \n        lambda : LAMBDA ':' FLOAT ','\n               |\n        \n        splitconf : SPLITCLASSIF ':' VARINSTANCE ':' ':' labeltype ','\n                  |\n        \n        target : TARGET ':' VARINSTANCE\n        \n        filters : CONDS ':' '[' condlist ']' ','\n                |\n        \n        condlist : condlist ',' condition\n                 | condition\n        condition : VARINSTANCE '.' VARARG '=' VARSTRINGcondition : VARINSTANCE '.' VARARG '=' NUMBERcondition : VARINSTANCE '.' VARARG '=' FLOATfeatureconf : FEFUNC ':' '[' featurelist ']' ','\n        dbconf : DBFUNC ':' VARSTRING ','\n               | DBFUNC ':' VARSTRING\n               |\n        \n        scoring : NETWORK ':' VARSTRING ','\n                | SCORE ':' RULESET '.' NUMBER ','\n                | SCORE ':' VARSTRING ','\n        \n        featurelist : featurelist ',' featurefunc\n                    | featurefunc\n        \n        featurefunc : EMBEDDING '(' VARSTRING ',' VARSTRING ',' VARSTRING ',' VARSTRING ',' VARSTRING ')'\n                    | VECTOR '(' VARSTRING ')'\n                    | INPUT '(' VARSTRING ')'\n        \n        rule : HARDCONSTRAINT ':' proposition filters dbconf\n        \n        proposition : conjunction IMPL instance ','\n        proposition : conjunction IMPL instance\n        \n        conjunction : conjunction '&' instance\n                    | instance\n        instance : VARPRED '(' argumentlist ')'instance : '~' VARPRED '(' argumentlist ')'instance : VARPRED '(' argumentlist ')' '^' '?'instance : '~' VARPRED '(' argumentlist ')' '^' '?'instance : VARPRED '(' argumentlist ')' '*'instance : '~' VARPRED '(' argumentlist ')' '*'instance : VARPRED '(' argumentlist ')' '^' '?' '*'instance : '~' VARPRED '(' argumentlist ')' '^' '?' '*'\n        argumentlist : argumentlist ',' argument\n                     | argument\n        argument : VARINSTANCEargument : VARSTRINGargument : VARINSTANCE '^' VARPRED '?'argument : VARSTRING '^' VARPRED '?'"
    
_lr_action_items = {'VARINSTANCE':([67,84,91,98,129,176,187,],[83,83,108,83,108,188,195,]),'FLOAT':([92,168,],[111,179,]),'NETWORK':([51,64,77,78,96,97,116,121,131,137,140,152,159,160,178,],[-34,-29,94,-54,-53,-57,-61,-58,-28,-59,-62,-33,-63,-60,-64,]),'LBMULTILABEL':([127,200,],[148,148,]),'NUMBER':([61,158,168,],[73,177,180,]),'VARSTRING':([14,15,16,17,18,21,22,23,25,62,67,84,88,98,102,114,115,124,168,182,185,186,198,203,206,208,],[26,27,28,29,30,36,37,38,39,74,82,82,104,82,122,134,135,104,181,190,193,194,201,205,207,209,]),'FECLASS':([0,6,24,31,],[2,2,-3,-2,]),'ARGINT':([143,],[161,]),'FILE':([41,],[50,]),'SPLITCLASSIF':([113,122,133,142,192,],[-43,-42,155,-41,-40,]),'LBMULTICLASS':([127,200,],[147,147,]),'GROUPBY':([46,],[58,]),'ARGID':([143,],[166,]),'FEMODULE':([0,6,24,31,],[3,3,-3,-2,]),'HARDCONSTRAINT':([20,35,44,57,],[33,33,-26,-25,]),'DBCLASS':([0,6,24,31,],[4,4,-3,-2,]),'*':([97,121,137,160,],[116,140,159,178,]),',':([26,30,36,37,73,78,80,81,82,83,97,101,103,105,106,109,110,111,116,118,121,122,130,134,135,137,138,139,140,144,147,148,149,151,159,160,161,162,163,164,165,166,169,171,177,178,179,180,181,184,191,193,197,199,201,202,205,207,210,],[40,41,47,48,90,96,98,-66,-68,-67,-57,98,-7,124,126,129,-36,131,-61,-65,-58,142,152,156,157,-59,-70,-69,-62,-6,-16,-15,-17,-35,-63,-60,-11,-12,-10,-9,-8,-13,-48,183,189,-64,-39,-38,-37,192,-47,198,-50,-51,203,204,206,208,-49,]),'RULE':([20,35,44,57,],[32,32,-26,-25,]),'.':([108,136,],[128,158,]),'LBTYPE':([90,],[107,]),'DBFUNC':([56,69,78,96,97,113,116,121,137,140,152,159,160,178,192,],[-34,85,-54,-53,-57,85,-61,-58,-59,-62,-33,-63,-60,-64,-40,]),'GROUPARG':([70,],[87,]),'ARGSTRING':([143,],[164,]),'LBBINARY':([127,200,],[149,149,]),';':([11,19,27,28,29,34,38,39,45,56,69,74,78,86,87,96,97,116,121,122,125,137,140,142,146,147,148,149,152,159,160,167,175,178,195,],[24,31,-23,-22,-21,44,-20,-24,57,-34,-43,-18,-54,-52,-19,-53,-57,-61,-58,-42,-4,-59,-62,-41,-14,-16,-15,-17,-33,-63,-60,-5,-27,-64,-32,]),':':([1,2,3,4,5,8,9,10,12,32,33,49,50,58,59,60,63,76,85,94,95,104,107,112,123,155,174,188,196,],[14,15,16,17,18,21,22,23,25,42,43,61,62,70,71,72,75,92,102,114,115,123,127,132,143,176,187,196,200,]),'=':([150,],[168,]),'IMPL':([52,53,79,97,116,121,137,140,159,160,178,],[-56,65,-55,-57,-61,-58,-59,-62,-63,-60,-64,]),'$end':([6,13,24,31,],[-1,0,-3,-2,]),'LOAD':([0,6,24,31,],[5,5,-3,-2,]),'FEFUNC':([93,156,157,189,],[112,-44,-46,-45,]),'ARGDOUBLE':([143,],[162,]),'SCORE':([51,64,77,78,96,97,116,121,131,137,140,152,159,160,178,],[-34,-29,95,-54,-53,-57,-61,-58,-28,-59,-62,-33,-63,-60,-64,]),'RULESET':([0,6,24,31,115,],[7,7,-3,-2,136,]),'EMBEDDING':([153,183,],[172,172,]),'ENTITY':([0,6,24,31,],[8,8,-3,-2,]),'INPUT':([153,183,],[173,173,]),'[':([71,72,75,132,],[88,89,91,153,]),'LABEL':([0,6,24,31,],[1,1,-3,-2,]),']':([103,105,109,110,144,145,151,161,162,163,164,165,166,169,171,179,180,181,191,197,199,210,],[-7,125,130,-36,-6,167,-35,-11,-12,-10,-9,-8,-13,-48,184,-39,-38,-37,-47,-50,-51,-49,]),'LBCLASSES':([40,],[49,]),'VARPRED':([42,43,55,65,66,89,99,100,126,],[54,54,68,54,54,106,119,120,145,]),'PREDICATE':([0,6,24,31,],[9,9,-3,-2,]),'TARGET':([113,122,133,142,154,192,204,],[-43,-42,-31,-41,174,-40,-30,]),'CONDS':([51,56,78,96,97,116,121,137,140,159,160,178,],[63,63,-54,-53,-57,-61,-58,-59,-62,-63,-60,-64,]),'VARARG':([128,],[150,]),'DBMODULE':([0,6,24,31,],[10,10,-3,-2,]),'&':([52,53,79,97,116,121,137,140,159,160,178,],[-56,66,-55,-57,-61,-58,-59,-62,-63,-60,-64,]),'^':([82,83,97,121,],[99,100,117,141,]),')':([80,81,82,83,101,118,138,139,190,194,209,],[97,-66,-68,-67,121,-65,-70,-69,197,199,210,]),'ARGUMENTS':([47,48,],[59,60,]),'ARGSTRINGID':([143,],[163,]),'?':([117,119,120,141,],[137,138,139,160,]),'SCMODULE':([0,6,24,31,],[12,12,-3,-2,]),'(':([54,68,170,172,173,],[67,84,182,185,186,]),'{':([7,],[20,]),'LAMBDA':([51,64,78,96,97,116,121,137,140,152,159,160,178,],[-34,76,-54,-53,-57,-61,-58,-59,-62,-33,-63,-60,-64,]),'}':([35,44,57,],[46,-26,-25,]),'VECTOR':([153,183,],[170,170,]),'~':([42,43,65,66,],[55,55,55,55,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'argumentdef':([88,124,],[103,144,]),'argument':([67,84,98,],[81,81,118,]),'proposition':([42,43,],[51,56,]),'filters':([51,56,],[64,69,]),'scoring':([77,],[93,]),'argumentlist':([67,84,],[80,101,]),'labeltype':([127,200,],[146,202,]),'condlist':([91,],[109,]),'instance':([42,43,65,66,],[52,52,78,79,]),'dbconf':([69,113,],[86,133,]),'type':([143,],[165,]),'rulelist':([20,],[35,]),'instructionlist':([0,],[6,]),'splitconf':([133,],[154,]),'argumentdeflist':([88,],[105,]),'conjunction':([42,43,],[53,53,]),'condition':([91,129,],[110,151,]),'featurefunc':([153,183,],[169,191,]),'target':([154,],[175,]),'instruction':([0,6,],[11,19,]),'rule':([20,35,],[34,45,]),'featurelist':([153,],[171,]),'model':([0,],[13,]),'lambda':([64,],[77,]),'featureconf':([93,],[113,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> model","S'",1,None,None,None),
  ('model -> instructionlist','model',1,'p_model','parser.py',39),
  ('instructionlist -> instructionlist instruction ;','instructionlist',3,'p_instructionlist','parser.py',44),
  ('instructionlist -> instruction ;','instructionlist',2,'p_instructionlist','parser.py',45),
  ('instruction -> ENTITY : VARSTRING , ARGUMENTS : [ argumentdeflist ]','instruction',9,'p_instruction_entity','parser.py',50),
  ('instruction -> PREDICATE : VARSTRING , ARGUMENTS : [ VARPRED , VARPRED ]','instruction',11,'p_instruction_predicate','parser.py',56),
  ('argumentdeflist -> argumentdeflist , argumentdef','argumentdeflist',3,'p_argument_def_list','parser.py',68),
  ('argumentdeflist -> argumentdef','argumentdeflist',1,'p_argument_def_list','parser.py',69),
  ('argumentdef -> VARSTRING : : type','argumentdef',4,'p_argument','parser.py',78),
  ('type -> ARGSTRING','type',1,'p_type_string','parser.py',83),
  ('type -> ARGSTRINGID','type',1,'p_type_string_id','parser.py',87),
  ('type -> ARGINT','type',1,'p_type_int','parser.py',91),
  ('type -> ARGDOUBLE','type',1,'p_type_double','parser.py',95),
  ('type -> ARGID','type',1,'p_type_id','parser.py',99),
  ('instruction -> LABEL : VARSTRING , LBCLASSES : NUMBER , LBTYPE : labeltype','instruction',11,'p_instruction_label','parser.py',104),
  ('labeltype -> LBMULTILABEL','labeltype',1,'p_labeltype_multilabel','parser.py',110),
  ('labeltype -> LBMULTICLASS','labeltype',1,'p_labeltype_multiclass','parser.py',114),
  ('labeltype -> LBBINARY','labeltype',1,'p_labeltype_binary','parser.py',118),
  ('instruction -> LOAD : VARSTRING , FILE : VARSTRING','instruction',7,'p_instruction_load','parser.py',124),
  ('instruction -> RULESET { rulelist } GROUPBY : GROUPARG','instruction',7,'p_instruction_ruleset','parser.py',132),
  ('instruction -> DBMODULE : VARSTRING','instruction',3,'p_instruction_dbmodule','parser.py',140),
  ('instruction -> DBCLASS : VARSTRING','instruction',3,'p_instruction_dbclass','parser.py',144),
  ('instruction -> FEMODULE : VARSTRING','instruction',3,'p_instruction_femodule','parser.py',148),
  ('instruction -> FECLASS : VARSTRING','instruction',3,'p_instruction_feclass','parser.py',152),
  ('instruction -> SCMODULE : VARSTRING','instruction',3,'p_instruction_scmodule','parser.py',156),
  ('rulelist -> rulelist rule ;','rulelist',3,'p_rulelist','parser.py',161),
  ('rulelist -> rule ;','rulelist',2,'p_rulelist','parser.py',162),
  ('rule -> RULE : proposition filters lambda scoring featureconf dbconf splitconf target','rule',10,'p_rule','parser.py',182),
  ('lambda -> LAMBDA : FLOAT ,','lambda',4,'p_lambda','parser.py',195),
  ('lambda -> <empty>','lambda',0,'p_lambda','parser.py',196),
  ('splitconf -> SPLITCLASSIF : VARINSTANCE : : labeltype ,','splitconf',7,'p_splitconf','parser.py',205),
  ('splitconf -> <empty>','splitconf',0,'p_splitconf','parser.py',206),
  ('target -> TARGET : VARINSTANCE','target',3,'p_target','parser.py',215),
  ('filters -> CONDS : [ condlist ] ,','filters',6,'p_filters','parser.py',221),
  ('filters -> <empty>','filters',0,'p_filters','parser.py',222),
  ('condlist -> condlist , condition','condlist',3,'p_cond_list','parser.py',231),
  ('condlist -> condition','condlist',1,'p_cond_list','parser.py',232),
  ('condition -> VARINSTANCE . VARARG = VARSTRING','condition',5,'p_condition_string','parser.py',241),
  ('condition -> VARINSTANCE . VARARG = NUMBER','condition',5,'p_condition_number','parser.py',245),
  ('condition -> VARINSTANCE . VARARG = FLOAT','condition',5,'p_condition_float','parser.py',249),
  ('featureconf -> FEFUNC : [ featurelist ] ,','featureconf',6,'p_features','parser.py',253),
  ('dbconf -> DBFUNC : VARSTRING ,','dbconf',4,'p_dbfunction','parser.py',258),
  ('dbconf -> DBFUNC : VARSTRING','dbconf',3,'p_dbfunction','parser.py',259),
  ('dbconf -> <empty>','dbconf',0,'p_dbfunction','parser.py',260),
  ('scoring -> NETWORK : VARSTRING ,','scoring',4,'p_scoring_function','parser.py',269),
  ('scoring -> SCORE : RULESET . NUMBER ,','scoring',6,'p_scoring_function','parser.py',270),
  ('scoring -> SCORE : VARSTRING ,','scoring',4,'p_scoring_function','parser.py',271),
  ('featurelist -> featurelist , featurefunc','featurelist',3,'p_feature_list','parser.py',284),
  ('featurelist -> featurefunc','featurelist',1,'p_feature_list','parser.py',285),
  ('featurefunc -> EMBEDDING ( VARSTRING , VARSTRING , VARSTRING , VARSTRING , VARSTRING )','featurefunc',12,'p_feature_func','parser.py',296),
  ('featurefunc -> VECTOR ( VARSTRING )','featurefunc',4,'p_feature_func','parser.py',297),
  ('featurefunc -> INPUT ( VARSTRING )','featurefunc',4,'p_feature_func','parser.py',298),
  ('rule -> HARDCONSTRAINT : proposition filters dbconf','rule',5,'p_hard_constraint_rule','parser.py',315),
  ('proposition -> conjunction IMPL instance ,','proposition',4,'p_proposition','parser.py',328),
  ('proposition -> conjunction IMPL instance','proposition',3,'p_proposition','parser.py',329),
  ('conjunction -> conjunction & instance','conjunction',3,'p_conjunction','parser.py',336),
  ('conjunction -> instance','conjunction',1,'p_conjunction','parser.py',337),
  ('instance -> VARPRED ( argumentlist )','instance',4,'p_instance','parser.py',346),
  ('instance -> ~ VARPRED ( argumentlist )','instance',5,'p_instance_neg','parser.py',350),
  ('instance -> VARPRED ( argumentlist ) ^ ?','instance',6,'p_instance_target','parser.py',354),
  ('instance -> ~ VARPRED ( argumentlist ) ^ ?','instance',7,'p_instance_neg_target','parser.py',358),
  ('instance -> VARPRED ( argumentlist ) *','instance',5,'p_instance_select','parser.py',362),
  ('instance -> ~ VARPRED ( argumentlist ) *','instance',6,'p_instance_neg_select','parser.py',366),
  ('instance -> VARPRED ( argumentlist ) ^ ? *','instance',7,'p_instance_target_select','parser.py',370),
  ('instance -> ~ VARPRED ( argumentlist ) ^ ? *','instance',8,'p_instance_neg_target_select','parser.py',374),
  ('argumentlist -> argumentlist , argument','argumentlist',3,'p_argument_list','parser.py',379),
  ('argumentlist -> argument','argumentlist',1,'p_argument_list','parser.py',380),
  ('argument -> VARINSTANCE','argument',1,'p_argument_variable','parser.py',389),
  ('argument -> VARSTRING','argument',1,'p_argument_constant','parser.py',393),
  ('argument -> VARINSTANCE ^ VARPRED ?','argument',4,'p_argument_target','parser.py',397),
  ('argument -> VARSTRING ^ VARPRED ?','argument',4,'p_argument_constant_target','parser.py',402),
]
